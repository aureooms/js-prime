'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.__eratosthenes23__ = __eratosthenes23__;

var _ = require('./');

/**
 * Sieve of Eratosthenes skipping all multiples of 2 and 3.
 *
 * 5 7 11 13 17 19 23 25 29 31 35 37 41 43 47 49 53 55 59 61 65 67 71 73 77 79
 * 0 1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
 *
 * 83 85 89 91 95 97 101 103 107 109 113 115 119 121 125 127 131 133 137 139
 * 26 27 28 29 30 31  32  33  34  35  36  37  38  39  40  41  42  43  44  45
 *
 * 143 145 149 151 155 157 161 163 167 169 173 175 179 181 185 187 191
 *  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62
 *
 *
 *
 * i( 5) = 0
 * i(25) = 7
 * i(35) = 10 = 7 + 5 - 2
 *
 * i( 7) = 1
 * i(49) = 15
 * i(77) = 24 = 15 + 7 + 2
 *
 * i( 11) = 2
 * i(121) = 39
 * i(143) = 46 = 39 + 11 - 4
 *
 * i( 13) = 3
 * i(139) = 45
 * i(191) = 62 = 45 + 13 + 4
 */

function __eratosthenes23__(alloc, fill, get, gothrough, usqrt) {

	var first = 5;

	var eratosthenes23 = function eratosthenes23(n, callback) {

		var size, sieve, m, i, j, p, l;

		if (n <= 2) {
			return null;
		}

		callback(2);

		if (n <= 3) {
			return null;
		}

		callback(3);

		if (n <= 5) {
			return null;
		}

		size = (0, _.ptoi23)(n);

		sieve = alloc(size);
		fill(sieve, 0, size, true);

		m = (0, _.ptoi23)(usqrt(n));
		i = (0, _.ptoi230)(first);

		for (l = 2;; l += 2) {

			if (i >= m) {
				break;
			}

			if (get(sieve, i)) {

				p = (0, _.itop230)(i);

				callback(p);

				j = (0, _.ptoi231)(p * p);

				gothrough(sieve, j, size, 2 * p);
				gothrough(sieve, j + p - l, size, 2 * p);
			}

			++i;

			if (i >= m) {
				break;
			}

			if (get(sieve, i)) {

				p = (0, _.itop231)(i);

				callback(p);

				j = (0, _.ptoi231)(p * p);

				gothrough(sieve, j, size, 2 * p);
				gothrough(sieve, j + p + l, size, 2 * p);
			}

			++i;
		}

		i = m;

		for (;;) {

			if (i >= size) {
				break;
			}

			if (get(sieve, i)) {
				callback((0, _.itop23)(i));
			}

			++i;

			if (i >= size) {
				break;
			}

			if (get(sieve, i)) {
				callback((0, _.itop23)(i));
			}

			++i;
		}

		return sieve;
	};

	return eratosthenes23;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zaWV2ZS9lcmF0b3N0aGVuZXMyMy5qcyJdLCJuYW1lcyI6WyJfX2VyYXRvc3RoZW5lczIzX18iLCJhbGxvYyIsImZpbGwiLCJnZXQiLCJnb3Rocm91Z2giLCJ1c3FydCIsImZpcnN0IiwiZXJhdG9zdGhlbmVzMjMiLCJuIiwiY2FsbGJhY2siLCJzaXplIiwic2lldmUiLCJtIiwiaSIsImoiLCJwIiwibCJdLCJtYXBwaW5ncyI6Ijs7Ozs7UUFpQ2dCQSxrQixHQUFBQSxrQjs7QUFqQ2hCOztBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBK0JPLFNBQVNBLGtCQUFULENBQThCQyxLQUE5QixFQUFzQ0MsSUFBdEMsRUFBNkNDLEdBQTdDLEVBQW1EQyxTQUFuRCxFQUErREMsS0FBL0QsRUFBdUU7O0FBRTdFLEtBQUlDLFFBQVEsQ0FBWjs7QUFFQSxLQUFJQyxpQkFBaUIsU0FBakJBLGNBQWlCLENBQVdDLENBQVgsRUFBZUMsUUFBZixFQUEwQjs7QUFFOUMsTUFBSUMsSUFBSixFQUFXQyxLQUFYLEVBQW1CQyxDQUFuQixFQUF1QkMsQ0FBdkIsRUFBMkJDLENBQTNCLEVBQStCQyxDQUEvQixFQUFtQ0MsQ0FBbkM7O0FBRUEsTUFBS1IsS0FBSyxDQUFWLEVBQWM7QUFDYixVQUFPLElBQVA7QUFDQTs7QUFFREMsV0FBVSxDQUFWOztBQUVBLE1BQUtELEtBQUssQ0FBVixFQUFjO0FBQ2IsVUFBTyxJQUFQO0FBQ0E7O0FBRURDLFdBQVUsQ0FBVjs7QUFFQSxNQUFLRCxLQUFLLENBQVYsRUFBYztBQUNiLFVBQU8sSUFBUDtBQUNBOztBQUVERSxTQUFPLGNBQVFGLENBQVIsQ0FBUDs7QUFFQUcsVUFBUVYsTUFBT1MsSUFBUCxDQUFSO0FBQ0FSLE9BQU1TLEtBQU4sRUFBYyxDQUFkLEVBQWtCRCxJQUFsQixFQUF5QixJQUF6Qjs7QUFFQUUsTUFBSSxjQUFRUCxNQUFPRyxDQUFQLENBQVIsQ0FBSjtBQUNBSyxNQUFJLGVBQVNQLEtBQVQsQ0FBSjs7QUFFQSxPQUFNVSxJQUFJLENBQVYsR0FBZ0JBLEtBQUssQ0FBckIsRUFBeUI7O0FBRXhCLE9BQUtILEtBQUtELENBQVYsRUFBYztBQUNiO0FBQ0E7O0FBRUQsT0FBS1QsSUFBS1EsS0FBTCxFQUFhRSxDQUFiLENBQUwsRUFBd0I7O0FBRXZCRSxRQUFJLGVBQVNGLENBQVQsQ0FBSjs7QUFFQUosYUFBVU0sQ0FBVjs7QUFFQUQsUUFBSSxlQUFTQyxJQUFJQSxDQUFiLENBQUo7O0FBRUFYLGNBQVdPLEtBQVgsRUFBbUJHLENBQW5CLEVBQXVCSixJQUF2QixFQUE4QixJQUFJSyxDQUFsQztBQUNBWCxjQUFXTyxLQUFYLEVBQW1CRyxJQUFJQyxDQUFKLEdBQVFDLENBQTNCLEVBQStCTixJQUEvQixFQUFzQyxJQUFJSyxDQUExQztBQUVBOztBQUVELEtBQUVGLENBQUY7O0FBR0EsT0FBS0EsS0FBS0QsQ0FBVixFQUFjO0FBQ2I7QUFDQTs7QUFFRCxPQUFLVCxJQUFLUSxLQUFMLEVBQWFFLENBQWIsQ0FBTCxFQUF3Qjs7QUFFdkJFLFFBQUksZUFBU0YsQ0FBVCxDQUFKOztBQUVBSixhQUFVTSxDQUFWOztBQUVBRCxRQUFJLGVBQVNDLElBQUlBLENBQWIsQ0FBSjs7QUFFQVgsY0FBV08sS0FBWCxFQUFtQkcsQ0FBbkIsRUFBdUJKLElBQXZCLEVBQThCLElBQUlLLENBQWxDO0FBQ0FYLGNBQVdPLEtBQVgsRUFBbUJHLElBQUlDLENBQUosR0FBUUMsQ0FBM0IsRUFBK0JOLElBQS9CLEVBQXNDLElBQUlLLENBQTFDO0FBRUE7O0FBRUQsS0FBRUYsQ0FBRjtBQUVBOztBQUVEQSxNQUFJRCxDQUFKOztBQUVBLFdBQVk7O0FBRVgsT0FBS0MsS0FBS0gsSUFBVixFQUFpQjtBQUNoQjtBQUNBOztBQUVELE9BQUtQLElBQUtRLEtBQUwsRUFBYUUsQ0FBYixDQUFMLEVBQXdCO0FBQ3ZCSixhQUFVLGNBQVFJLENBQVIsQ0FBVjtBQUNBOztBQUVELEtBQUVBLENBQUY7O0FBR0EsT0FBS0EsS0FBS0gsSUFBVixFQUFpQjtBQUNoQjtBQUNBOztBQUVELE9BQUtQLElBQUtRLEtBQUwsRUFBYUUsQ0FBYixDQUFMLEVBQXdCO0FBQ3ZCSixhQUFVLGNBQVFJLENBQVIsQ0FBVjtBQUNBOztBQUVELEtBQUVBLENBQUY7QUFDQTs7QUFFRCxTQUFPRixLQUFQO0FBQ0EsRUFsR0Q7O0FBb0dBLFFBQU9KLGNBQVA7QUFFQSIsImZpbGUiOiJlcmF0b3N0aGVuZXMyMy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHB0b2kyMyAsIHB0b2kyMzAgLCBwdG9pMjMxICwgaXRvcDIzICwgaXRvcDIzMCAsIGl0b3AyMzEgfSBmcm9tICcuLycgO1xuXG4vKipcbiAqIFNpZXZlIG9mIEVyYXRvc3RoZW5lcyBza2lwcGluZyBhbGwgbXVsdGlwbGVzIG9mIDIgYW5kIDMuXG4gKlxuICogNSA3IDExIDEzIDE3IDE5IDIzIDI1IDI5IDMxIDM1IDM3IDQxIDQzIDQ3IDQ5IDUzIDU1IDU5IDYxIDY1IDY3IDcxIDczIDc3IDc5XG4gKiAwIDEgIDIgIDMgIDQgIDUgIDYgIDcgIDggIDkgMTAgMTEgMTIgMTMgMTQgMTUgMTYgMTcgMTggMTkgMjAgMjEgMjIgMjMgMjQgMjVcbiAqXG4gKiA4MyA4NSA4OSA5MSA5NSA5NyAxMDEgMTAzIDEwNyAxMDkgMTEzIDExNSAxMTkgMTIxIDEyNSAxMjcgMTMxIDEzMyAxMzcgMTM5XG4gKiAyNiAyNyAyOCAyOSAzMCAzMSAgMzIgIDMzICAzNCAgMzUgIDM2ICAzNyAgMzggIDM5ICA0MCAgNDEgIDQyICA0MyAgNDQgIDQ1XG4gKlxuICogMTQzIDE0NSAxNDkgMTUxIDE1NSAxNTcgMTYxIDE2MyAxNjcgMTY5IDE3MyAxNzUgMTc5IDE4MSAxODUgMTg3IDE5MVxuICogIDQ2ICA0NyAgNDggIDQ5ICA1MCAgNTEgIDUyICA1MyAgNTQgIDU1ICA1NiAgNTcgIDU4ICA1OSAgNjAgIDYxICA2MlxuICpcbiAqXG4gKlxuICogaSggNSkgPSAwXG4gKiBpKDI1KSA9IDdcbiAqIGkoMzUpID0gMTAgPSA3ICsgNSAtIDJcbiAqXG4gKiBpKCA3KSA9IDFcbiAqIGkoNDkpID0gMTVcbiAqIGkoNzcpID0gMjQgPSAxNSArIDcgKyAyXG4gKlxuICogaSggMTEpID0gMlxuICogaSgxMjEpID0gMzlcbiAqIGkoMTQzKSA9IDQ2ID0gMzkgKyAxMSAtIDRcbiAqXG4gKiBpKCAxMykgPSAzXG4gKiBpKDEzOSkgPSA0NVxuICogaSgxOTEpID0gNjIgPSA0NSArIDEzICsgNFxuICovXG5cbmV4cG9ydCBmdW5jdGlvbiBfX2VyYXRvc3RoZW5lczIzX18gKCBhbGxvYyAsIGZpbGwgLCBnZXQgLCBnb3Rocm91Z2ggLCB1c3FydCApIHtcblxuXHR2YXIgZmlyc3QgPSA1IDtcblxuXHR2YXIgZXJhdG9zdGhlbmVzMjMgPSBmdW5jdGlvbiAoIG4gLCBjYWxsYmFjayApIHtcblxuXHRcdHZhciBzaXplICwgc2lldmUgLCBtICwgaSAsIGogLCBwICwgbCA7XG5cblx0XHRpZiAoIG4gPD0gMiApIHtcblx0XHRcdHJldHVybiBudWxsIDtcblx0XHR9XG5cblx0XHRjYWxsYmFjayggMiApIDtcblxuXHRcdGlmICggbiA8PSAzICkge1xuXHRcdFx0cmV0dXJuIG51bGwgO1xuXHRcdH1cblxuXHRcdGNhbGxiYWNrKCAzICkgO1xuXG5cdFx0aWYgKCBuIDw9IDUgKSB7XG5cdFx0XHRyZXR1cm4gbnVsbCA7XG5cdFx0fVxuXG5cdFx0c2l6ZSA9IHB0b2kyMyggbiApIDtcblxuXHRcdHNpZXZlID0gYWxsb2MoIHNpemUgKSA7XG5cdFx0ZmlsbCggc2lldmUgLCAwICwgc2l6ZSAsIHRydWUgKSA7XG5cblx0XHRtID0gcHRvaTIzKCB1c3FydCggbiApICkgO1xuXHRcdGkgPSBwdG9pMjMwKCBmaXJzdCApIDtcblxuXHRcdGZvciAoIGwgPSAyIDsgOyBsICs9IDIgKSB7XG5cblx0XHRcdGlmICggaSA+PSBtICkge1xuXHRcdFx0XHRicmVhayA7XG5cdFx0XHR9XG5cblx0XHRcdGlmICggZ2V0KCBzaWV2ZSAsIGkgKSApIHtcblxuXHRcdFx0XHRwID0gaXRvcDIzMCggaSApIDtcblxuXHRcdFx0XHRjYWxsYmFjayggcCApIDtcblxuXHRcdFx0XHRqID0gcHRvaTIzMSggcCAqIHAgKSA7XG5cblx0XHRcdFx0Z290aHJvdWdoKCBzaWV2ZSAsIGogLCBzaXplICwgMiAqIHAgKSA7XG5cdFx0XHRcdGdvdGhyb3VnaCggc2lldmUgLCBqICsgcCAtIGwgLCBzaXplICwgMiAqIHAgKSA7XG5cblx0XHRcdH1cblxuXHRcdFx0KytpIDtcblxuXG5cdFx0XHRpZiAoIGkgPj0gbSApIHtcblx0XHRcdFx0YnJlYWsgO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIGdldCggc2lldmUgLCBpICkgKSB7XG5cblx0XHRcdFx0cCA9IGl0b3AyMzEoIGkgKSA7XG5cblx0XHRcdFx0Y2FsbGJhY2soIHAgKSA7XG5cblx0XHRcdFx0aiA9IHB0b2kyMzEoIHAgKiBwICkgO1xuXG5cdFx0XHRcdGdvdGhyb3VnaCggc2lldmUgLCBqICwgc2l6ZSAsIDIgKiBwICkgO1xuXHRcdFx0XHRnb3Rocm91Z2goIHNpZXZlICwgaiArIHAgKyBsICwgc2l6ZSAsIDIgKiBwICkgO1xuXG5cdFx0XHR9XG5cblx0XHRcdCsraSA7XG5cblx0XHR9XG5cblx0XHRpID0gbSA7XG5cblx0XHRmb3IgKCA7IDsgKSB7XG5cblx0XHRcdGlmICggaSA+PSBzaXplICkge1xuXHRcdFx0XHRicmVhayA7XG5cdFx0XHR9XG5cblx0XHRcdGlmICggZ2V0KCBzaWV2ZSAsIGkgKSApIHtcblx0XHRcdFx0Y2FsbGJhY2soIGl0b3AyMyggaSApICkgO1xuXHRcdFx0fVxuXG5cdFx0XHQrK2kgO1xuXG5cblx0XHRcdGlmICggaSA+PSBzaXplICkge1xuXHRcdFx0XHRicmVhayA7XG5cdFx0XHR9XG5cblx0XHRcdGlmICggZ2V0KCBzaWV2ZSAsIGkgKSApIHtcblx0XHRcdFx0Y2FsbGJhY2soIGl0b3AyMyggaSApICkgO1xuXHRcdFx0fVxuXG5cdFx0XHQrK2kgO1xuXHRcdH1cblxuXHRcdHJldHVybiBzaWV2ZSA7XG5cdH0gO1xuXG5cdHJldHVybiBlcmF0b3N0aGVuZXMyMyA7XG5cbn1cbiJdfQ==